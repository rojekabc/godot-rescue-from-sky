[gd_scene load_steps=6 format=2]

[ext_resource path="res://Resources/ArmyMaterial.shader" type="Shader" id=1]
[ext_resource path="res://Resources/Army20.png" type="Texture" id=2]

[sub_resource type="GDScript" id=1]
resource_name = "Army"
script/source = "extends Area2D

var LOG = Game.CONFIGURATION.loggers.has('Army')

var Moveable
var Destructable : Destructable
var ownerIdx

signal object_destroyed(object)

var tween
var id

func _ready():
	if get_parent().get_name() == 'Templates':
		return
	# resolve Tween
	tween = Game.getWorld().get_node(\"Tween\")

func target_destroyed(target):
	Game.verbose(get_name() + ': Target destroyed')
	find_new_target()

func get_name():
	return Game.playerDefinitions[ownerIdx].name + \".army.\" + str(id)

func destroy():
	Game.verbose(get_name() + \": Destroy\")
	emit_signal('object_destroyed', self)
	tween.remove(self, \"position\")
	queue_free()

func reset_rotation():
	$Sprite.rotation_degrees = Moveable.get_rotation_degrees()

func assign_target(target):
	Moveable.assign_target(target)
	reset_rotation()

func get_target() -> Area2D:
	return Moveable.target
	
func get_hp_rate() -> float:
	return Destructable.get_hp_rate()

func find_new_target():
	var target = Game.getWorld().army_find_target(self, [Moveable.target])
	if target == null:
		return
	# setup new target
	assign_target(target)
	# start moving to the target
	Game.getWorld()._calculate_full_move_tween(self)

"

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 1 )
shader_param/color = Plane( 1, 0, 0, 1 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 15, 15 )

[node name="Army" type="Area2D" groups=[
"Army",
]]
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 2 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 3 )

