[gd_scene load_steps=7 format=2]

[ext_resource path="res://Resources/TransportCircle.shader" type="Shader" id=1]
[ext_resource path="res://Resources/Transport.png" type="Texture" id=2]
[ext_resource path="res://Resources/TransportFont.tres" type="DynamicFont" id=3]

[sub_resource type="GDScript" id=1]
resource_name = "Transport"
script/source = "extends Area2D

var LOG = Game.CONFIGURATION.loggers.has('Transport')

var resource
var ownerIdx

var Moveable
var Destructable

signal object_destroyed(object)

func _init():
	Moveable = Game.Moveable.new(self)
	Destructable = Game.Destructable.new(self)

func setup(sourceStructure, targetStructure, transportedResource):
	resource = transportedResource
	ownerIdx = sourceStructure.ownerIdx
	Moveable.assign(sourceStructure, targetStructure)
	Destructable.assign()
	$Acronym.text = Game.resourceDefinitions[resource].acronym
	# $Acronym.text = ''
	$Sprite.material = Game.playerDefinitions[ownerIdx].transportMaterial
	# $Sprite.material.set('shader_param/image', load(Game.resourceDefinitions[resource].texture))
	# $Sprite.material.set('shader_param/color', Game.playerDefinitions[ownerIdx].color)
	pass

func _ready():
	if get_parent().get_name() == 'Templates':
		return
	pass

func target_destroyed(target):
	Game.verbose(get_name() + ': Target destroyed')

func get_name():
	return Game.playerDefinitions[Moveable.source.ownerIdx].name + \".transport.\" + Game.resourceDefinitions[resource].name

# destroy after hit
func destroy():
	emit_signal('object_destroyed', self)
	# Resource won't go to the target - inform it
	Moveable.target.Consumer.clear(resource)
	# clean up the object
	clean_up()

# clean up the object
func clean_up():
	# remove the object		
	Game.getWorld().get_node('Tween').remove(self, 'position')
	queue_free()

func complete():
	if LOG: Game.verbose(\"Transport completed from \"
			+ Game.playerDefinitions[Moveable.source.ownerIdx].name
			+ \".\" + Game.structureDefinitions[Moveable.source.type].name
			+ \" send \" + Game.resourceDefinitions[resource].name
			+ \" to \" + Game.playerDefinitions[Moveable.target.ownerIdx].name
			+ \".\" + Game.structureDefinitions[Moveable.target.type].name)
	Moveable.target.Consumer.put(resource)
	emit_signal('object_destroyed', self)
	clean_up()
	pass
"

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 1 )
shader_param/color = Plane( 1, 0, 1, 1 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 15, 15 )

[node name="Trasnport" type="Area2D" groups=[
"Transport",
]]
collision_mask = 0
script = SubResource( 1 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 2 )

[node name="Collision" type="CollisionShape2D" parent="."]
visible = false
shape = SubResource( 3 )

[node name="Acronym" type="Label" parent="."]
margin_left = -15.0
margin_top = -12.0
margin_right = 16.0
margin_bottom = 15.0
custom_fonts/font = ExtResource( 3 )
text = "X"
align = 1
valign = 1

